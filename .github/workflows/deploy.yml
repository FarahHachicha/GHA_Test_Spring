name: CD Pipeline 
on:
  push:
    branches:
      - main
jobs:
  build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Setup QEMU
        uses: docker/setup-qemu-action@v1
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: docker build
        uses: docker/build-push-action@v2
        with:
          context: .
          push: false
          tags: farahhachicha/gha_test_spring:latest
      - name: docker login
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: docker push
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: farahhachicha/gha_test_spring:latest
  
  deploy:
    needs : build
    name: Deploy to Kubernetes
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Install kubectl
        run: |
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
      - name: Install Minikube
        run: |
          curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
          sudo install minikube-linux-amd64 /usr/local/bin/minikube
          minikube version
      - name: Start Minikube
        run: |
          minikube start
      - name: Set kubectl context
        run: |
          minikube kubectl -- get po -A
      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f kubernetes.yaml
      - name : Get Information 
        run: |
          kubectl get all 
      - name: Forward Port
        run: |
          kubectl port-forward svc/my-app-service 8080:80 &
          echo $! > .port-forward.pid
      - name: Stop Port Forwarding
        run: |
          kill $(cat .port-forward.pid)

